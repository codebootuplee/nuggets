apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image }}
          ports:
            - containerPort: {{ .Values.kafka.ports.internal }}
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.kafka.zookeeperConnect }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:{{ .Values.kafka.ports.internal }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.kafka.offsetReplicationFactor }}"
            - name: KAFKA_BROKER_ID
              value: "1"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - port: {{ .Values.kafka.ports.internal }}
      targetPort: {{ .Values.kafka.ports.internal }}
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: {{ .Values.zookeeper.replicas }}
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: {{ .Values.zookeeper.image }}
          ports:
            - containerPort: {{ .Values.zookeeper.ports.client }}
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "{{ .Values.zookeeper.ports.client }}"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - port: {{ .Values.zookeeper.ports.client }}
      targetPort: {{ .Values.zookeeper.ports.client }}
  clusterIP: None



